{"version":3,"sources":["gameControl/actionTypes.js","constants.js","utils/index.js","gameControl/reducer.js","chessBoard/actionTypes.js","chessBoard/actions.js","utils/SocketClient.js","player/actions.js","player/actionTypes.js","chessBoard/views/chessItem.js","gameControl/views/gamePlaying.js","menu/menuPage.js","menu/RoomMenu.js","gameControl/views/routeControl.js","chessBoard/reducer.js","chessBoard/views/chessBoard.js","player/reducer.js","player/views/playerZone.js","player/views/cardItem.js","player/views/publicZone.js","player/views/gameBoard.js","App.js","Store.js","index.js"],"names":["RESET","UPDATE_SOCKET","ChessTypes","NONE","NORMAL","findChessPos","board","chessId","selectPos","i","length","row","j","id","x","y","createChess","player","chessType","type","createBearFrogBoard","getInitState","players","name","order","local","nowPlayer","chessBoard","selected","selectId","gameControl","socketContainer","this","socketClient","setSocketClient","bind","getSocketClient","s","SELECT","MOVE_TO","SET_BOARD","setBoard","SocketAPI","host","ws","WebSocket","onclose","e","alert","onerror","disconnect","data","send","JSON","stringify","func","onmessage","onopen","gameMessage","isRoundEnd","needMessage","setLocalPlayer","ChessItem","props","context","state","nextProps","beSelected","canBeMoveTo","onSelect","onMoveTo","canBeSelect","typeChangeInfo","iconClassName","icon","className","onClick","React","Component","getNextPosList","maxX","maxY","gx","gy","moveList","x2","y2","push","judgeCanBeMoveTo","indexOf","connect","PlayControl","console","log","roomId","parseInt","process","SocketClient","setOnOpen","setOnMessage","event","parse","gameOver","onReceiveBoard","preGameOver","winners","resetAll","flatBoard","flatten","arr","reduce","pre","val","concat","Array","isArray","playerChessCount","key","playerCanMoveCount","forEach","overs","Object","keys","judgeGameOver","dispatch","setNowPlayer","buttonList","title","url","urlFunc","randomNumber","Math","floor","random","menuPage","map","buttonData","Button","raised","history","OnePlayerPanel","playerName","value","readOnly","text","onCopy","onJump","RoomMenu","location","window","outlined","RouteControl","playControl","match","params","playerId","path","component","exact","doKill","isHorizon","ii","allLength","maxAllLength","selfLength","maxSelfLength","selfSize","enemyList","jj","now","max","reason","select","moveTo","rowKey","item","index","PlayerZone","ownProps","active","game","cardPlayed","isShow","onRemove","typeShow","style","backgroundColor","render","preProps","isNowPlayer","onRemoveCard","isComputer","cards","life","noCard","str","href","from","nowPlayerName","roundEnd","App","win","reducer","combineReducers","action","newState","nextState","newBoard","temp","filter","todoItem","storeEnhancers","compose","applyMiddleware","devToolsExtension","f","createStore","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.5f7c4b41.chunk.js","sourcesContent":["export const RESET = 'GAME_CONTROL/RESET';\r\nexport const UPDATE_SOCKET = 'GAME_CONTROL/UPDATE_SOCKET';\r\n","export const ChessTypes = {\r\n  NONE: '无棋',\r\n  NORMAL: '有棋',\r\n};\r\n","/**\r\n * Created by yuiff on 2018/3/31.\r\n */\r\nimport { ChessTypes } from '../constants.js';\r\n\r\nconst findChessPos = (board, chessId) => {\r\n  let selectPos = {};\r\n  for (let i = 0; i < board.length; i++) {\r\n    const row = board[i];\r\n    for (let j = 0; j < row.length; j++) {\r\n      // console.log(typeof(i), typeof(j));\r\n      const item = row[j];\r\n      if (item.id === chessId) {\r\n        selectPos = {\r\n          x: i,\r\n          y: j,\r\n        };\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // console.log(selectPos, chessId, board, typeof(selectPos.x), typeof(selectPos.y));\r\n  return selectPos;\r\n};\r\n\r\nlet chessId = 0;\r\nconst createChess = (player, chessType) => ({\r\n  id: chessId++,\r\n  player,\r\n  type: chessType,\r\n});\r\n\r\nconst createBearFrogBoard = () => {\r\n  const board = [\r\n    [createChess(1, ChessTypes.NORMAL), createChess(1, ChessTypes.NORMAL), createChess(1, ChessTypes.NORMAL), createChess(1, ChessTypes.NORMAL)],\r\n    [createChess(1, ChessTypes.NORMAL), createChess(null, ChessTypes.NONE), createChess(null, ChessTypes.NONE), createChess(1, ChessTypes.NORMAL)],\r\n    [createChess(0, ChessTypes.NORMAL), createChess(null, ChessTypes.NONE), createChess(null, ChessTypes.NONE), createChess(0, ChessTypes.NORMAL)],\r\n    [createChess(0, ChessTypes.NORMAL), createChess(0, ChessTypes.NORMAL), createChess(0, ChessTypes.NORMAL), createChess(0, ChessTypes.NORMAL)],\r\n  ];\r\n  return board;\r\n};\r\n\r\nconst getInitState = () => {\r\n  const initValues = {\r\n    player: {\r\n      players: [\r\n        {\r\n          name: '黑方',\r\n        },\r\n        {\r\n          name: '红方',\r\n        },\r\n      ],\r\n      order: [0, 1],\r\n      local: [0, 1],\r\n      nowPlayer: 0,\r\n    },\r\n    chessBoard: {\r\n      board: createBearFrogBoard(),\r\n      selected: false,\r\n      selectId: -1,\r\n    },\r\n    gameControl: {\r\n    },\r\n  };\r\n  return initValues;\r\n};\r\n\r\nclass SocketContainerClass{\r\n  constructor(){\r\n    this.socketClient = null;\r\n    this.setSocketClient = this.setSocketClient.bind(this);\r\n    this.getSocketClient = this.getSocketClient.bind(this);\r\n  }\r\n  setSocketClient(s) {\r\n    this.socketClient = s;\r\n  }\r\n  getSocketClient () {return this.socketClient}\r\n}\r\n\r\nconst socketContainer = new SocketContainerClass();\r\n\r\nexport { findChessPos, createBearFrogBoard, getInitState, socketContainer };\r\n","import { RESET, UPDATE_SOCKET } from './actionTypes.js';\r\nimport { ChessTypes } from '../constants.js';\r\nimport { getInitState } from '../utils/';\r\n\r\nexport default (state = ChessTypes.NONE, action) => {\r\n  switch (action.type) {\r\n    case RESET: {\r\n      //好像写的不对，也没用上\r\n      console.log('RESET!', getInitState());\r\n      return getInitState();\r\n    }\r\n    case UPDATE_SOCKET: {\r\n      //这个好像，也没用上，这个东西都不放在store里了\r\n      console.log('UPDATE_SOCKET!', action.socketClient);\r\n      const { socketClient } = action;\r\n      return {\r\n        ...state,\r\n        socketClient,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SELECT = 'CHESS_BOARD/SELECT';\r\nexport const MOVE_TO = 'CHESS_BOARD/MOVE_TO';\r\nexport const SET_BOARD = 'CHESS_BOARD/SET_BOARD';\r\n","import { SELECT, MOVE_TO, SET_BOARD } from './actionTypes.js';\r\n\r\nexport const select = id => ({\r\n  type: SELECT,\r\n  id,\r\n});\r\n\r\nexport const moveTo = id => ({\r\n  type: MOVE_TO,\r\n  id,\r\n});\r\n\r\nexport const setBoard = board => ({\r\n  type: SET_BOARD,\r\n  board,\r\n});\r\n","// const host = 'http://localhost:3000';\n// const socketPath = '/socket';\n\nexport default class SocketAPI {\n  ws;\n\n  connect(host) {\n    this.ws = new WebSocket(host);\n    this.ws.onclose = (e) => {\n      alert('webSocket onClose!' + e);\n    };\n    this.ws.onerror = (e) => {\n      alert('webSocket onError!' + e);\n    };\n  }\n\n  disconnect() {\n    this.ws.disconnect();//待确认，乱写的\n  }\n\n  send(data) {\n    this.ws.send(JSON.stringify(data));\n  }\n\n  setOnMessage(func) {\n    this.ws.onmessage = func;\n  }\n\n  setOnOpen(func) {\n    this.ws.onopen = func;\n  }\n\n  // on(event, fun) {\n  //     // No promise is needed here, but we're expecting one in the middleware.\n  //     return new Promise((resolve, reject) => {\n  //         if (!this.socket) return reject('No socket connection.');\n  //\n  //         this.socket.on(event, fun);\n  //         resolve();\n  //     });\n  // }\n}\n\nconst gameMessage = (board, nowPlayer, isRoundEnd = false, needMessage = false) => {\n  return {\n    board,\n    nowPlayer,\n    isRoundEnd,\n    needMessage\n  };\n};\n\nexport { gameMessage };\n","import { SET_LOCAL_PLAYER, ROUND_END } from './actionTypes.js';\r\n\r\nexport const setLocalPlayer = (local, nowPlayer) => ({\r\n  type: SET_LOCAL_PLAYER,\r\n  local,\r\n  nowPlayer,\r\n});\r\n\r\nexport const roundEnd = () => ({\r\n  type: ROUND_END,\r\n});\r\n","export const SET_LOCAL_PLAYER = 'PLAYER/PLAY';\r\nexport const ROUND_END = 'PLAYER/ROUND_END';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport MdAccessibility from 'react-icons/lib/md/accessibility';\r\nimport MdAccessible from 'react-icons/lib/md/accessible';\r\nimport MdPets from 'react-icons/lib/md/pets';\r\nimport * as FontAwesome from 'react-icons/lib/fa'\r\nimport {ChessTypes} from '../../constants.js';\r\nimport {findChessPos} from '../../utils';\r\n\r\nclass ChessItem extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {}\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n  }\r\n\r\n  render() {\r\n    const {player, type, beSelected, canBeMoveTo, onSelect, onMoveTo, canBeSelect, typeChangeInfo} = this.props;\r\n    const onClick = () => {\r\n      if (canBeMoveTo) {\r\n        onMoveTo();\r\n      } else if (type != ChessTypes.NONE && canBeSelect) {\r\n        onSelect();\r\n      }\r\n    };\r\n    let iconClassName = `chess-item ${player == 1 ? 'enemy' : ''} `;\r\n    if (type === ChessTypes.NONE) {\r\n      if (typeChangeInfo === \"LEAVE\")\r\n        iconClassName += 'leave ';\r\n      else if (typeChangeInfo === \"DIE\") {\r\n        iconClassName += 'die ';\r\n      } else {\r\n        iconClassName += 'normal-none  ';\r\n      }\r\n    } else {\r\n      if (typeChangeInfo === \"ARRIVE\") {\r\n        iconClassName += 'arrive ';\r\n      } else {\r\n        iconClassName += 'normal-display ';\r\n      }\r\n    }\r\n\r\n    let icon = null;\r\n    if (player == 0)\r\n      icon = <MdAccessibility className={iconClassName}/>\r\n    else\r\n      icon = <MdAccessibility className={iconClassName}/>;\r\n    return (\r\n      <div\r\n        className={`chess-block ${beSelected ? 'selected' : ''} ${canBeMoveTo ? 'can-be-move-to' : ''} ${canBeSelect && !beSelected ? 'can-be-select' : ''} `}\r\n        onClick={onClick}>\r\n        {icon}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// TodoItem.propTypes = {\r\n//   onToggle: PropTypes.func.isRequired,\r\n//   onRemove: PropTypes.func.isRequired,\r\n//   completed: PropTypes.bool.isRequired,\r\n//   text: PropTypes.string.isRequired\r\n// }\r\n\r\nfunction getNextPosList(board, x, y) {\r\n  const maxX = board.length;\r\n  const maxY = board[0].length;\r\n  const gx = [0, 0, -1, 1];\r\n  const gy = [1, -1, 0, 0];\r\n  const moveList = [];\r\n  for (const i in gx) {\r\n    const x2 = x + gx[i];\r\n    const y2 = y + gy[i];\r\n    // console.log(x, y, gx[i], gy[i], x2, y2, maxX, maxY, typeof(x), typeof(gx[i]));\r\n    if (x2 >= 0 && x2 < maxX && y2 >= 0 && y2 < maxY && board[x2][y2].type === ChessTypes.NONE) {\r\n      moveList.push(board[x2][y2].id);\r\n    }\r\n  }\r\n  return moveList;\r\n}\r\n\r\nconst judgeCanBeMoveTo = ({board, selectId, selected}, chessId) => {\r\n  if (!selected) return false;\r\n  const {x, y} = findChessPos(board, selectId);\r\n  const moveList = getNextPosList(board, x, y);\r\n  // console.log(moveList.indexOf(chessId) !== -1);\r\n  return moveList.indexOf(chessId) !== -1;\r\n};\r\nconst mapStateToProps = (state, {chessId, player}) => ({\r\n  beSelected: state.chessBoard.selected && state.chessBoard.selectId == chessId,\r\n  canBeMoveTo: judgeCanBeMoveTo(state.chessBoard, chessId),\r\n  canBeSelect: state.player.nowPlayer === player && state.player.local.indexOf(player) != -1,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChessItem);\r\nexport { getNextPosList };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport { setBoard } from '../../chessBoard/actions.js';\r\nimport { reset, updateSocket } from '../actions.js';\r\nimport SocketClient, { gameMessage } from '../../utils/SocketClient';\r\nimport { roundEnd, setLocalPlayer } from '../../player/actions';\r\nimport { moveTo } from '../../chessBoard/actions';\r\nimport { socketContainer } from '../../utils';\r\nimport { getNextPosList } from '../../chessBoard/views/chessItem';\r\nimport { ChessTypes } from '../../constants';\r\n\r\nclass PlayControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('props.roomId', props.roomId);\r\n    this.props.setBoard();\r\n    if (props.roomId) {\r\n      this.props.setLocalPlayer([parseInt(props.player)]);\r\n\r\n      const host = process.env.REACT_APP_WS_HOST + props.roomId;\r\n      const socketClient = new SocketClient();\r\n      socketClient.connect(host);\r\n      socketClient.setOnOpen(() => {\r\n        socketClient.send(gameMessage(null, null, null, true));\r\n      });\r\n      socketClient.setOnMessage((event) => {\r\n        console.log(event, event.data, JSON.parse(event.data));\r\n        // alert(event.data);\r\n        const data = JSON.parse(event.data);\r\n        if (data.needMessage) {\r\n          const { board, nowPlayer, gameOver } = this.props;\r\n          if (!gameOver) socketClient.send(gameMessage(board, nowPlayer, false));\r\n        } else {\r\n          props.onReceiveBoard(data);\r\n        }\r\n      });\r\n      socketContainer.setSocketClient(socketClient);\r\n    } else {\r\n      this.props.setLocalPlayer([0, 1]);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { gameOver: preGameOver } = this.props;\r\n    const { gameOver, winners } = nextProps;\r\n    console.log('judge gameOver! ', this.props, gameOver, preGameOver);\r\n    if (gameOver && !preGameOver) {\r\n      alert(`游戏结束！胜者是${winners}`);\r\n      // window.location.reload();\r\n      nextProps.resetAll();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chessBoard, player, gameOver, roomId,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"full-window\">\r\n        <div className=\"inner-window\">\r\n          {roomId ? <div>房间{roomId}</div> : ''}\r\n          <div>{chessBoard}</div>\r\n          <div>{player}</div>\r\n          <div>规则：本回合移动的己方棋子和其移动后相邻的棋子，两个棋子组成炮台，杀死处在该炮台连线上相邻的敌方棋子。如果这条直线上有4个棋子则杀不掉。当有玩家只剩1颗棋子或者无法行动时输掉。</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst flatten = arr => arr.reduce((pre, val) => pre.concat(Array.isArray(val) ? flatten(val) : val), []);\r\n\r\nfunction judgeGameOver(playerChessCount, player, board) {\r\n  const {players, order} = player;\r\n  let gameOver = false;\r\n  let winners = [];\r\n  // 判断是否只剩1棋，输掉\r\n  for (const key in playerChessCount) {\r\n    if (playerChessCount[key] <= 1) {\r\n      gameOver = true;\r\n    } else if (players[parseInt(key)]) winners.push(players[parseInt(key)].name);\r\n  }\r\n  if (!gameOver) {\r\n    // 判断是否无棋可走，输掉\r\n    winners = [];\r\n    const playerCanMoveCount = { ...order };\r\n    for (const key in playerCanMoveCount) playerCanMoveCount[key] = {};\r\n    for (let i=0; i < board.length; i++){\r\n      for(let j=0; j < board[i].length; j++){\r\n        if(board[i][j].type === ChessTypes.NORMAL){\r\n          const moveList = getNextPosList(board, i, j);\r\n          const player = board[i][j].player;\r\n          moveList.forEach((id)=>{playerCanMoveCount[player][id]=true;});\r\n        }\r\n      }\r\n    }\r\n\r\n    const overs = {};\r\n    for (const key in playerCanMoveCount) {\r\n      if (Object.keys(playerCanMoveCount[key]) <= 0) {\r\n        gameOver = true;\r\n        if (players[parseInt(key)]) overs[key]=true;\r\n      }\r\n    }\r\n    if(gameOver)\r\n      for (const key in playerCanMoveCount) {\r\n        console.log(key, playerCanMoveCount[key], overs[key]);\r\n        if (players[parseInt(key)] && !overs[key]) winners.push(players[parseInt(key)].name);\r\n      }\r\n    console.log(\"playerCanMoveCount\",board,playerCanMoveCount, overs);\r\n  }\r\n  return {\r\n    gameOver,\r\n    winners\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const board = state.chessBoard.board;\r\n  const flatBoard = flatten(board);\r\n\r\n  const playerChessCount = { ...state.player.order };\r\n  for (const key in playerChessCount) playerChessCount[key] = 0;\r\n  for (const i in flatBoard) {\r\n    playerChessCount[flatBoard[i].player]++;\r\n  }\r\n  const { gameOver, winners } = judgeGameOver(playerChessCount, state.player, board);\r\n  console.log(flatBoard, gameOver);\r\n  return {\r\n    gameOver,\r\n    winners: gameOver ? winners : [],\r\n    board,\r\n    nowPlayer: state.player.nowPlayer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setLocalPlayer: (local) => {\r\n    dispatch(setLocalPlayer(local));\r\n  },\r\n  setNowPlayer: (nowPlayer) => {\r\n    dispatch(setLocalPlayer(null, nowPlayer));\r\n  },\r\n  setBoard: (board) => {\r\n    dispatch(setBoard(board));\r\n  },\r\n  resetAll: () => {\r\n    dispatch(setBoard());\r\n  },\r\n  onReceiveBoard: (data) => {\r\n    const { board, nowPlayer, isRoundEnd } = data;\r\n    console.log('will dispatch, board=', board, nowPlayer, isRoundEnd);\r\n    dispatch(setBoard(board));\r\n    if (nowPlayer || nowPlayer === 0) dispatch(setLocalPlayer(null, nowPlayer));\r\n    if (isRoundEnd) dispatch(roundEnd());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayControl);\r\n","import React, {Component} from 'react';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\n\r\nimport \"./menuPage.scss\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst buttonList = [\r\n  {title: '本地双人', url: '/local'},\r\n  // {title: '在线双人-南位', url: '/online/123/0'},\r\n  // {title: '在线双人-北位', url: '/online/123/1'},\r\n  {\r\n    title: '网络对战', urlFunc: () => {\r\n      const randomNumber = Math.floor(Math.random() * 1000000 + 1);\r\n      return `/room/${randomNumber}`\r\n    }\r\n  },\r\n];\r\n\r\nconst menuPage = (props) => (<div className=\"menu-page\">\r\n  <div className={\"title-field\"}>\r\n    <div className=\"page-title\">\r\n      熊蛙棋\r\n    </div>\r\n  </div>\r\n  <div className=\"right-field\">\r\n    <div className=\"page-select-list\">\r\n      {buttonList.map(buttonData => {\r\n        const {title, url, urlFunc} = buttonData;\r\n        return <div>\r\n          <Button\r\n            raised className=\"mdc-button my-button\" onClick={() => {\r\n            if (urlFunc) props.history.push(urlFunc());\r\n            else props.history.push(url);\r\n          }}>\r\n            {title}\r\n          </Button></div>\r\n      })}\r\n    </div>\r\n  </div>\r\n  {/* <div><Link to=\"/\">主菜单</Link></div> */}\r\n</div>);\r\n\r\nexport default menuPage;\r\n","import React, {Component} from 'react';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\n\r\nimport \"./RoomMenu.scss\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\r\n\r\nconst buttonList = [\r\n  {title: '玩家1进入', urlFunc: (roomId, playerId) => `/online/${roomId}/${playerId}`},\r\n  {title: '玩家2进入', urlFunc: (roomId, playerId) => `/online/${roomId}/${playerId}`},\r\n];\r\n\r\nconst OnePlayerPanel = (props) => {\r\n  const {playerName, url} = props;\r\n  return <div className='one-player-panel'>\r\n    <div>{playerName}</div>\r\n    <div>\r\n      <input className='my-input' value={url} readOnly={true}/>\r\n      <CopyToClipboard text={url}\r\n                       onCopy={() => {\r\n                       }}>\r\n        <button className='copy-button' onClick={() => {\r\n        }}>复制网址\r\n        </button>\r\n      </CopyToClipboard>\r\n    </div>\r\n    <Button\r\n      raised className=\"enter-button\" onClick={() => {\r\n      props.onJump && props.onJump();\r\n    }}>{`进入${playerName}座位`}</Button>\r\n  </div>\r\n};\r\n\r\nconst RoomMenu = (props) => {\r\n  const {history, roomId} = props;\r\n  console.log(\"location!\", props.location, window.location);\r\n  const host = window.location.host;\r\n  return (<div className=\"menu-page\">\r\n    <div className={\"title-field\"}>\r\n      <div className=\"page-info\">\r\n        网络1V1对战：把一个座位的网址发给朋友，自己进入另一个座位网址。\r\n      </div>\r\n      <div><Button outlined className=\"back-button\" onClick={() => {\r\n        props.history.push(`/`);\r\n      }}>返回主菜单</Button></div>\r\n    </div>\r\n    <div className=\"right-field\">\r\n      <div className=\"player-copy-field\">\r\n        <OnePlayerPanel playerName={\"玩家1\"} url={`${host}#/online/${roomId}/${0}`} onJump={() => {\r\n          props.history.push(`/online/${roomId}/${0}`);\r\n        }}/>\r\n        <OnePlayerPanel playerName={\"玩家2\"} url={`${host}#/online/${roomId}/${1}`} onJump={() => {\r\n          props.history.push(`/online/${roomId}/${1}`);\r\n        }}/>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default RoomMenu;\r\n","/**\r\n * Created by yuiff on 2018/4/1.\r\n */\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.css';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\nimport PlayControl from './gamePlaying.js';\r\nimport menuPage from \"../../menu/menuPage\";\r\nimport RoomMenu from \"../../menu/RoomMenu\";\r\n\r\nclass RouteControl extends Component {\r\n  render() {\r\n    const {chessBoard, player, gameOver} = this.props;\r\n    const playControl = ({match}) => <PlayControl {...this.props} roomId={match.params.roomId}\r\n                                                  player={match.params.playerId}/>;\r\n    const roomControl = (props) => {\r\n      const {match} = props;\r\n      return <RoomMenu {...props} roomId={match.params.roomId}/>\r\n    };\r\n    return (\r\n      <div className=\"full-window\">\r\n        <div className=\"inner-window\">\r\n          <Switch>\r\n            <Route path=\"/local\" component={playControl}/>\r\n            <Route path=\"/online/:roomId/:playerId\" component={playControl}/>\r\n            <Route exact path=\"/\" component={menuPage}/>\r\n            <Route path=\"/room/:roomId\" component={roomControl}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\n\r\nexport default connect(mapStateToProps)(RouteControl);\r\n","import { SELECT, MOVE_TO, SET_BOARD } from './actionTypes.js';\r\nimport { findChessPos, socketContainer } from '../utils';\r\nimport { ChessTypes } from '../constants.js';\r\nimport { createBearFrogBoard } from '../utils/';\r\nimport { gameMessage } from '../utils/SocketClient';\r\n\r\nfunction doKill(board, x, y, player) {\r\n  for (let isHorizon = 0; isHorizon < 2; isHorizon++) {\r\n    let maxX = board.length;\r\n    let maxY = board[0].length;\r\n    if (isHorizon) [maxX, maxY] = [maxY, maxX];\r\n    const ii = isHorizon ? x : y;\r\n\r\n    let allLength = 0,\r\n      maxAllLength = 0;\r\n    let selfLength = 0,\r\n      maxSelfLength = 0,\r\n      selfSize = 0;\r\n    const enemyList = [];\r\n    for (let jj = 0; jj < maxY; jj++) {\r\n      const [i, j] = isHorizon ? [ii, jj] : [jj, ii];\r\n      const now = board[i][j];\r\n      if (now.type != ChessTypes.NONE) {\r\n        allLength++;\r\n        maxAllLength = Math.max(allLength, maxAllLength);\r\n        if (now.player === player) {\r\n          selfLength++;\r\n          maxSelfLength = Math.max(selfLength, maxSelfLength);\r\n          selfSize++;\r\n        } else {\r\n          enemyList.push(now);\r\n          selfLength = 0;\r\n        }\r\n      } else {\r\n        allLength = 0;\r\n        selfLength = 0;\r\n      }\r\n    }\r\n    if (maxAllLength == 3 && maxSelfLength == 2 && selfSize == 2 && enemyList.length == 1) {\r\n      for (let j = 0; j < enemyList.length; j++) {\r\n        enemyList[j].type = ChessTypes.NONE;\r\n        enemyList[j].typeChangeInfo = {reason:\"DIE\"};\r\n        enemyList[j].player = -1;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SELECT: {\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        selected: true,\r\n        selectId: action.id,\r\n      };\r\n    }\r\n    case MOVE_TO: {\r\n      const now = findChessPos(state.board, state.selectId);\r\n      const { x, y } = findChessPos(state.board, action.id);\r\n      console.log(now.x, now.y, x, y, state.selectId, action.id, state.board);\r\n      const newBoard = state.board.map(row =>\r\n        row.map(item => ({ ...item })));\r\n      // (now.x,now.y) move to x,y\r\n      const temp = newBoard[now.x][now.y];\r\n      newBoard[now.x][now.y] = newBoard[x][y];\r\n      newBoard[x][y] = temp;\r\n\r\n    newBoard[now.x][now.y].typeChangeInfo = {reason:\"LEAVE\", x,y};\r\n    newBoard[x][y].typeChangeInfo = {reason:\"ARRIVE\", x:now.x, y:now.y};\r\n\r\n      const player = newBoard[x][y].player;\r\n      doKill(newBoard, x, y, player);\r\n      if (socketContainer.getSocketClient()) {\r\n        socketContainer.getSocketClient()\r\n          .send(gameMessage(newBoard, null, true));\r\n      }\r\n      return {\r\n        ...state,\r\n        board: newBoard,\r\n        selected: false,\r\n      };\r\n    }\r\n    case SELECT: {\r\n      return state.filter(todoItem => todoItem.id !== action.id);\r\n    }\r\n    case SET_BOARD: {\r\n      console.log('SET_BOARD!REDUCER, got action:', action);\r\n      const board = action.board ? action.board : createBearFrogBoard();\r\n      return {\r\n        ...state,\r\n        board,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { select, moveTo } from '../actions.js';\r\nimport { roundEnd } from '../../player/actions';\r\nimport ChessItem from './chessItem.js';\r\n\r\nimport './style.css';\r\n\r\nconst ChessBoard = ({ board, onSelect, onMoveTo }) => {\r\n  let rowKey = 0;\r\n  return (\r\n    <div className=\"chess-board\">\r\n      {\r\n                board.map(row => (\r\n                  <div className=\"row\" key={rowKey++}>\r\n                    {row.map((item, index) => (\r\n                      <ChessItem\r\n                        key={index}\r\n                        chessId={item.id}\r\n                        player={item.player}\r\n                        type={item.type}\r\n                        onSelect={() => onSelect(item.id)}\r\n                        onMoveTo={() => onMoveTo(item.id)}\r\n                      />\r\n                        ))}\r\n                  </div>\r\n                ))\r\n            }\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  board: state.chessBoard.board,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSelect: (id) => {\r\n    dispatch(select(id));\r\n  },\r\n  onMoveTo: (id) => {\r\n    dispatch(moveTo(id));\r\n    dispatch(roundEnd());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChessBoard);\r\n\r\n","import { SET_LOCAL_PLAYER, ROUND_END } from './actionTypes.js';\r\n\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ROUND_END: {\r\n      const newState = {\r\n        ...state,\r\n        nowPlayer: state.order[(state.order.indexOf(state.nowPlayer) + 1) % state.order.length],\r\n      };\r\n      return newState;\r\n    }\r\n    case SET_LOCAL_PLAYER: {\r\n      const nextState = {\r\n        ...state,\r\n        nowPlayer: action.nowPlayer ? action.nowPlayer : 0,\r\n      };\r\n      if (action.local) { nextState.local = action.local; }\r\n      return nextState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { setLocalPlayer } from '../actions.js';\r\nimport CardItem from './cardItem.js';\r\n\r\nclass PlayerZone extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.render = this.render.bind(this);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidUpdate(preProps) {\r\n    const isNowPlayer = this.props.isNowPlayer;\r\n    const onRemoveCard = this.props.onRemoveCard;\r\n    const isComputer = this.props.isComputer;\r\n    const player = this.props.player;\r\n    const cards = this.props.cards;\r\n    const nowPlayer = this.props.nowPlayer;\r\n    const life = this.props.life;\r\n    console.log('AI', isNowPlayer, isComputer, player, nowPlayer);\r\n    if (isNowPlayer && isComputer && life > 0) {\r\n      const length = cards.length;\r\n      const selectCardIndex = Math.floor(Math.random() * length);\r\n      const selectCardId = cards[selectCardIndex].id;\r\n      onRemoveCard(selectCardId, player);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const cards = this.props.cards;\r\n    const player = this.props.player;\r\n    const life = this.props.life;\r\n    const onRemoveCard = this.props.onRemoveCard;\r\n    const noCard = this.props.noCard;\r\n    const isComputer = this.props.isComputer;\r\n    if (noCard && !isComputer) {\r\n      let str = `出完了！你还剩${life}星星，`;\r\n      if (life === 3) str += '能够全身而退，无敌。';\r\n      else if (life < 3) str += '不足3颗，完蛋了。';\r\n      else str += '赚到。';\r\n      alert(str);\r\n      if (life >= 3) window.location.href = 'http://www.yuiffy.com/hebi.html';\r\n      else window.location.href = 'http://www.yuiffy.com/mario.html';\r\n    }\r\n    return (\r\n      <div className=\"playerZone\">\r\n        {\r\n                    life <= 0 ?\r\n                      <div className=\"dead\">\r\n                            死了。\r\n                      </div>\r\n                        :\r\n                        // life!==0\r\n                      <div>\r\n                        {player}\r\n                        {/* <div className=\"cardZone\"> */}\r\n                        {/* { */}\r\n                        {/* cards.map((item) => ( */}\r\n                        {/* <CardItem */}\r\n                        {/* key={item.id} */}\r\n                        {/* type={item.type} */}\r\n                        {/* player={player} */}\r\n                        {/* onRemove={() => onRemoveCard(item.id, player)} */}\r\n                        {/* /> */}\r\n                        {/* )) */}\r\n                        {/* } */}\r\n                        {/* </div> */}\r\n                        <div className=\"lifeZone\">\r\n                          {\r\n                                    Array.from(Array(life), () => '★').map(item => (\r\n                                      <span>{item}</span>\r\n                                    ))\r\n                                }\r\n                        </div>\r\n                      </div>\r\n                }\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayerZone.propTypes = {\r\n  cards: PropTypes.array.isRequired,\r\n  life: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  cards: state.player.players[ownProps.player].cards,\r\n  life: state.player.players[ownProps.player].life,\r\n  noCard: false,\r\n  isComputer: state.player.players[ownProps.player].isComputer,\r\n  isNowPlayer: state.player.nowPlayer === ownProps.player,\r\n  nowPlayer: state.player.nowPlayer,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemoveCard: (id, player) => {\r\n    dispatch(setLocalPlayer(id, player));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerZone);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { playCard } from '../actions.js';\r\n\r\nconst CardItem = ({\r\n  type, active, isShow, onRemove,\r\n}) => {\r\n  let typeShow = '';\r\n  switch (type) {\r\n    case 0:\r\n      typeShow = '石头';\r\n      break;\r\n    case 1:\r\n      typeShow = '剪刀';\r\n      break;\r\n    case 2:\r\n      typeShow = '布';\r\n      break;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={active ? onRemove : null}\r\n      style={{\r\n                 backgroundColor: active ? 'yellow' : 'white',\r\n             }}\r\n    >\r\n      {active || isShow ? typeShow : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nCardItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n  isShow: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: state.game.nowPlayer === ownProps.player && state.game.players[ownProps.player].cardPlayed.length === 0,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CardItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// import {bindActionCreators} from 'redux';\r\nimport CardItem from './cardItem.js';\r\nimport { playCard, showHand, roundEnd } from '../actions.js';\r\n// import {FilterTypes} from '../../constants.js';\r\n\r\nconst PublicZone = ({ nowPlayerName, roundEnd }) => (\r\n  <div className=\"\" onClick={roundEnd}>\r\n            现在轮到{nowPlayerName}行动\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  nowPlayerName: state.player.players[state.player.nowPlayer].name,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  roundEnd: () => {\r\n    dispatch(roundEnd());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicZone);\r\n\r\n","import React from 'react';\r\nimport PlayerZone from './playerZone.js';\r\nimport PublicZone from './publicZone.js';\r\n\r\nimport './style.css';\r\n\r\nexport default () => (\r\n  <div className=\"\">\r\n    <PublicZone />\r\n  </div>\r\n);\r\n\r\n","import React from 'react';\r\nimport { view as GameControl } from './gameControl/';\r\nimport { view as ChessBoard } from './chessBoard/';\r\nimport { view as Player } from './player/';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const chessBoard = <ChessBoard />;\r\n  const player = <Player />;\r\n  return (\r\n    <GameControl chessBoard={chessBoard} player={player} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n\r\nimport { reducer as playerReducer } from './player';\r\nimport { reducer as chessBoardReducer } from './chessBoard';\r\nimport { reducer as gameControlReducer } from './gameControl';\r\nimport { getInitState } from './utils/';\r\n\r\nconst win = window;\r\n\r\nconst reducer = combineReducers({\r\n  player: playerReducer,\r\n  chessBoard: chessBoardReducer,\r\n  gameControl: gameControlReducer,\r\n});\r\n\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middlewares.push(require('redux-immutable-state-invariant').default());\r\n}\r\n\r\nconst storeEnhancers = compose(\r\n  applyMiddleware(...middlewares),\r\n  (win && win.devToolsExtension) ? win.devToolsExtension() : f => f,\r\n);\r\n\r\nexport default createStore(reducer, getInitState(), storeEnhancers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { HashRouter as BrowserRouter } from 'react-router-dom';\r\n\r\nimport store from './Store.js';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}